// Config
$avatar-icon-padding: 6px !default;
$avatar-icon-padding-lg: 8px !default;

body {
  background: color('body-bg');

  &.vle {
      overflow: hidden;
  }
}

a {
    &:hover, &:focus { // TODO: remove when bootstrap css dependency is removed
        color: color('primary');
    }
}

blockquote {
  background-color: lighten(color('primary'), 56%);
  padding: 8px;
  margin: 16px 0;
  border-style: solid;
  border-color: color('primary');
  border-width: 0 0 0 3px;
}

.has-indicator {
    &:after {
        content: '';
        position: absolute;
        border-radius: 50%;
        padding: 5px;
        background-color: color('accent');
    }
}

.has-indicator--icon-button {
    &:after {
        top: 25px;
        left: 5px;
    }
}

// Badges
.badge {
    border-radius: $card-border-radius;
    padding: 2px 6px;
    font-size: rem(1.2);
    font-weight: 500;
    font-style: normal;
    background-color: color('gray-dark');

    &.md-button {
        min-width: 0;
        min-height: 0;
        line-height: inherit;

        &:hover, &:focus {
            background-color: color('gray-dark');
        }

        &:focus {
            outline: 1px dotted color('gray-dark');
        }
    }
}

.badge--info {
    background-color: color('info');
    color: #ffffff;
}

.badge--warn {
    background-color: color('warn');
    color: #ffffff;
}

.badge--success {
    background-color: color('success');
    color: #ffffff;
}

// Dividers
.divider--withmargin {
    margin: 16px 0;
}

.divider--dashed {
    border-top-style: dashed;
}

// Links
a {
  color: color('primary');
  cursor: pointer;
}

.active {
    background-color: rgba(158,158,158,0.2);
    color: color('text');
}

// Images & Icons
.avatar {
  border-radius: 50%;
  box-sizing: content-box;
}

.avatar--square {
  border-radius: $card-border-radius;
}

// Rules for sizing avatars (matches material icons plus avatar-icon padding)
.avatar {
  &.md-18 {
    height: 18px + $avatar-icon-padding*2;
    width: 18px + $avatar-icon-padding*2;
  }
  &.md-24 {
    height: 24px + $avatar-icon-padding*2;
    width: 24px + $avatar-icon-padding*2;
  }
  &.md-36 {
    height: 36px + $avatar-icon-padding*2;
    width: 36px + $avatar-icon-padding*2;
  }
  &.md-48 {
    height: 48px + $avatar-icon-padding*2;
    width: 48px + $avatar-icon-padding*2;
  }
}

// Rules for sizing avatar backgrounds (when using a child md-icon)
.avatar--icon {
  background-color: color('gray-light');
  white-space: normal !important;

  &:not(.md-avatar) {
      padding: $avatar-icon-padding;
  }

  &.md-18 {
    height: 18px;
    width: 18px;
  }
  &.md-24 {
    height: 24px;
    width: 24px;
  }
  &.md-36 {
    height: 36px;
    width: 36px;
  }
  &.md-48 {
    height: 48px;
    width: 48px;
  }
}

md-toolbar.md-light-theme:not(.md-menu-toolbar) {
  md-icon {
    color: color('text-secondary');
  }

  .md-button:disabled {
    md-icon {
      color: color('text-disabled');
    }
  }
}

// hacks for now
md-icon, .md-button:not([disabled]) {
  &.primary {
    color: color('primary') !important;
  }
  &.success {
    color: color('success') !important;
  }
  &.warn {
    color: color('warn') !important;
  }
  &.info {
    color: color('info') !important;
  }
  &.accent {
    color: color('accent') !important;
  }
  &.accent-1 {
    color: color('accent-1') !important;
  }
  &.accent-2 {
    color: color('accent-2') !important;
  }
}

// Theme overrides
md-input-container.md-wise-theme label {
  color: color('text');
}

md-select-menu.md-default-theme md-option[selected], md-select-menu md-option[selected] {
  background-color: color('selected-bg');
}

.md-autocomplete-suggestions-container.md-default-theme li .highlight,
.md-autocomplete-suggestions-container li .highlight {
  color: color('primary');
  background-color: color('selected-bg');
}

// Color
// Set classes for each named color in the $colors map
@each $key, $value in $colors {
    .#{$key} {
      color: $value;
    }
}

// Set classes for each named color in the $colors map
@each $key, $value in $colors {
    .#{$key}-bg {
      background-color: $value;
    }
}

// Set theme colors for angular-ui elements
@each $key, $value in $colors {
    md-progress-circular.#{$key} {
        path {
            stroke: $value;
        }
    }
}
